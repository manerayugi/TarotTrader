# risk_money_index.py
from __future__ import annotations
import streamlit as st

from auth import require_login_or_public

# ‡πÅ‡∏ó‡πá‡∏ö‡∏¢‡πà‡∏≠‡∏¢
import riskMoney_lot_size            # ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å Lot (public)
import riskMoney_position_sizing     # ‡∏£‡∏∞‡∏¢‡∏∞ SL ‚Üí Lot (login)
import riskMoney_gmksizing          # GMK Signal ‚Üí Lot (login)
import riskMoney_gmkplaning         # GMK Signal Planning (login)


def render_page():
    """
    ‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ó‡πá‡∏ö '‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å Lot'
    ‡πÅ‡∏ó‡πá‡∏ö‡∏≠‡∏∑‡πà‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
    """
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ MM: ‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞‡πÄ‡∏â‡∏û‡∏≤‡∏∞ sizing
    _ = require_login_or_public("mm_sizing_only")

    logged_in = bool(st.session_state.get("auth", {}).get("logged_in", False))

    st.header("üí∞ Risk & Money Management")

    # ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏ó‡πá‡∏ö
    if "mm_tab" not in st.session_state:
        st.session_state.mm_tab = "sizing"

    # ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏ó‡πá‡∏ö ‚Äî disable ‡πÅ‡∏ó‡πá‡∏ö‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà sizing ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
    tabs = st.columns([1.6, 1.8, 1.8, 2.2, 1.6])
    with tabs[0]:
        if st.button("üßÆ ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å Lot", use_container_width=True):
            st.session_state.mm_tab = "sizing"
    with tabs[1]:
        if st.button("üìè ‡∏£‡∏∞‡∏¢‡∏∞ SL ‚Üí Lot", use_container_width=True, disabled=not logged_in):
            st.session_state.mm_tab = "sl"
    with tabs[2]:
        if st.button("üì® GMK Signal ‚Üí Lot", use_container_width=True, disabled=not logged_in):
            st.session_state.mm_tab = "signal"
    with tabs[3]:
        if st.button("üìë GMK Signal Planning", use_container_width=True, disabled=not logged_in):
            st.session_state.mm_tab = "signal_plan"
    with tabs[4]:
        if st.button("üß™ (‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô)", use_container_width=True, disabled=not logged_in):
            st.session_state.mm_tab = "tbd2"

    st.divider()

    # ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô ‡πÅ‡∏ï‡πà‡πÄ‡∏ú‡∏•‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡πÅ‡∏ó‡πá‡∏ö‡∏≠‡∏∑‡πà‡∏ô -> ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏ó‡∏µ‡πà sizing
    if not logged_in and st.session_state.mm_tab != "sizing":
        st.session_state.mm_tab = "sizing"

    # ---- Route ‡∏ï‡∏≤‡∏°‡πÅ‡∏ó‡πá‡∏ö ----
    tab = st.session_state.mm_tab
    if tab == "sizing":
        riskMoney_lot_size.render_tab()  # public
        st.info("‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ä‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô ‚úÖ")

    elif tab == "sl":
        if not logged_in:
            _need_login_notice()
            return
        riskMoney_position_sizing.render_tab()

    elif tab == "signal":
        if not logged_in:
            _need_login_notice()
            return
        riskMoney_gmksizing.render_tab()

    elif tab == "signal_plan":
        if not logged_in:
            _need_login_notice()
            return
        riskMoney_gmkplaning.render_tab()

    else:
        st.info("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô)")


def _need_login_notice():
    st.markdown(
        """
        <div style='border:2px dashed #eab308; padding:16px; border-radius:12px; background:#18181b;'>
          <h3 style='margin:0 0 8px 0;'>üîí ‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô</h3>
          <div>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠
            <a href='https://facebook.com/TarotTrader162' target='_blank'>FB: Tarot Trader - ‡∏´‡∏°‡∏≠‡∏î‡∏π‡∏û‡∏≤‡πÄ‡∏ó‡∏£‡∏î</a>
            ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á</div>
        </div>
        """,
        unsafe_allow_html=True
    )