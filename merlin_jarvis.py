# merlin_tab_jarvis.py
import streamlit as st

def render_jarvis_tab():
    st.subheader("ü§ñ ‡∏à‡∏≤‡∏ß‡∏¥‡∏™ ‚Äî Admin Chat Console")
    st.caption("‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ LLM ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å (‡πÄ‡∏ä‡πà‡∏ô OpenAI) ‚Äî ‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î/‡∏Å‡∏≤‡∏£‡∏¢‡∏¥‡∏á API ‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á")

    # ‡πÄ‡∏Å‡πá‡∏ö state ‡πÅ‡∏ä‡∏ó
    if "merlin_jarvis_msgs" not in st.session_state:
        st.session_state.merlin_jarvis_msgs = []  # list[{"role":"user|assistant","content":"..."}]

    # ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô (placeholder)
    with st.expander("‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏ä‡∏ó (‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß)"):
        st.text_input("API Base URL", key="merlin_api_base", placeholder="https://api.openai.com/v1")
        st.text_input("API Key (‡∏à‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô session ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)", key="merlin_api_key", type="password")
        st.selectbox("Model", ["gpt-4o-mini", "gpt-4o", "gpt-4.1", "gpt-3.5-turbo"], index=0, key="merlin_model")
        st.caption("**‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏**: ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏¢‡∏¥‡∏á API ‡∏à‡∏£‡∏¥‡∏á ‡πÅ‡∏Ñ‡πà‡∏´‡∏ô‡πâ‡∏≤ UI ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÑ‡∏ß‡πâ")

    # ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ä‡∏ó
    st.markdown("---")
    for m in st.session_state.merlin_jarvis_msgs:
        if m["role"] == "user":
            st.markdown(f"**‡∏Ñ‡∏∏‡∏ì:** {m['content']}")
        else:
            st.markdown(f"**‡∏à‡∏≤‡∏ß‡∏¥‡∏™:** {m['content']}")

    st.markdown("---")
    # ‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå
    with st.form("jarvis_form", clear_on_submit=True):
        prompt = st.text_area("‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏∂‡∏á‡∏à‡∏≤‡∏ß‡∏¥‡∏™", height=100, key="jarvis_prompt")
        sent = st.form_submit_button("‡∏™‡πà‡∏á")
    if sent and prompt.strip():
        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        st.session_state.merlin_jarvis_msgs.append({"role": "user", "content": prompt.strip()})
        # ‡∏ï‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö mock ‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏à‡∏£‡∏¥‡∏á)
        reply = "üõ†Ô∏è (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° API) ‚Äî ‡∏à‡∏∞‡∏ï‡∏≠‡∏ö‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏¢‡∏¥‡∏á API"
        st.session_state.merlin_jarvis_msgs.append({"role": "assistant", "content": reply})
        st.rerun()

    # ‡∏õ‡∏∏‡πà‡∏°‡∏•‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
    cols = st.columns(2)
    with cols[0]:
        if st.button("üßπ ‡∏•‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ä‡∏ó"):
            st.session_state.merlin_jarvis_msgs = []
            st.experimental_rerun() if hasattr(st, "experimental_rerun") else st.rerun()