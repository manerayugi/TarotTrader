# knowledge_index.py
import streamlit as st
from knowledge_articles import financial, trading, mindset, risk_management
from streamlit.components.v1 import html as st_html
import streamlit.components.v1 as components
import re, hashlib
from auth import require_login_or_public

# ---------- CONFIG ----------
COVERS = {
    "financial":       "assets/finance_cover.jpg",
    "trading":         "assets/trading_cover.jpg",
    "mindset":         "assets/mindset_cover.jpg",
    "risk_management": "assets/risk_cover.jpg",
}

# ---------- Helpers ----------
def _cover(path: str, width=220):
    try:
        st.image(path, width=width)
    except Exception:
        st.warning(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: {path}")

def _slugify(art: dict) -> str:
    base = str(art.get("slug") or art.get("title") or "article")
    s = base.strip().lower()
    s = re.sub(r"\s+", "-", s)
    s = re.sub(r"[^a-z0-9\-]+", "", s)
    s = re.sub(r"-{2,}", "-", s).strip("-")
    if not s:
        s = "article-" + hashlib.md5(base.encode("utf-8")).hexdigest()[:6]
    return s

def _scroll_to(anchor_id: str):
    components.html(
        f"""
        <script>
        const el = document.getElementById("{anchor_id}");
        if (el) {{
            el.scrollIntoView({{behavior: "smooth", block: "start"}});
        }}
        </script>
        """,
        height=0,
    )

def _scroll_top():
    st_html(
        """
        <script>
        parent.window.scrollTo({top: 0, behavior: "smooth"});
        </script>
        """,
        height=0,
    )

def _render_article_buttons(articles, cat_id: str, cat_title: str, cat_icon: str):
    """‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏£‡∏¥‡∏î 3 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå + ‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î"""
    if not articles:
        st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏ô‡∏µ‡πâ")
        return

    cols_per_row = 3
    for i in range(0, len(articles), cols_per_row):
        row_items = articles[i:i+cols_per_row]
        cols = st.columns(cols_per_row, gap="small")

        for j, art in enumerate(row_items):
            with cols[j]:
                title = art["title"]
                slug = art.get("slug") or _slugify(art)
                key_suffix = f"{cat_id}_{i+j}_{slug}"
                if st.button(f"{cat_icon} {title}", use_container_width=True, key=f"open_{key_suffix}"):
                    st.session_state["show_article"]   = art
                    st.session_state["sel_cat_id"]     = cat_id
                    st.session_state["sel_slug"]       = slug
                    st.session_state["sel_cat_title"]  = cat_title
                    st.session_state["sel_cat_icon"]   = cat_icon
                    st.session_state["__jump_to__"]    = f"article-{cat_id}-{slug}"
                    st.rerun()

# ---------- MAIN ----------
def render_knowledge_index():
    # üîê ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡πà‡∏≠‡∏ô
    if not require_login_or_public("knowledge"):
        return
    # ‡∏à‡∏∏‡∏î‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î
    st.markdown("<div id='top'></div>", unsafe_allow_html=True)

    # ---------- ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡πâ‡∏ß: ‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß ----------
    show_article = st.session_state.get("show_article")
    if show_article:
        catid = st.session_state.get("sel_cat_id", "cat0")
        slug  = st.session_state.get("sel_slug", _slugify(show_article))
        cat_title = st.session_state.get("sel_cat_title", "‡∏Ñ‡∏•‡∏±‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ")
        cat_icon  = st.session_state.get("sel_cat_icon", "üìö")
        anchor_id = f"article-{catid}-{slug}"

        st.markdown(f"<div id='{anchor_id}'></div>", unsafe_allow_html=True)

        # ‡πÅ‡∏ñ‡∏ö‡∏ö‡∏ô: ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö (‡πÄ‡∏•‡πá‡∏Å ‡πÜ) + breadcrumb ‡∏´‡∏°‡∏ß‡∏î
        top_l, top_r = st.columns([1, 6])
        with top_l:
            if st.button("‚Üê ‡∏Å‡∏•‡∏±‡∏ö", key=f"back_{anchor_id}", use_container_width=False):
                st.session_state.pop("show_article", None)
                st.session_state.pop("sel_cat_id", None)
                st.session_state.pop("sel_slug", None)
                st.session_state.pop("sel_cat_title", None)
                st.session_state.pop("sel_cat_icon", None)
                _scroll_top()
                st.rerun()
        with top_r:
            st.caption(f"‡∏à‡∏≤‡∏Å‡∏´‡∏°‡∏ß‡∏î: {cat_icon} **{cat_title}**")

        st.markdown("---")
        st.subheader(show_article["title"])
        if show_article.get("desc"):
            st.caption(show_article["desc"])
        if callable(show_article.get("render")):
            show_article["render"]()
        else:
            st.info("‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤")

        if st.session_state.get("__jump_to__") == anchor_id:
            _scroll_to(anchor_id)
            st.session_state["__jump_to__"] = None

        return  # ‡∏à‡∏ö‡πÇ‡∏´‡∏°‡∏î‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß

    # ---------- ‡∏´‡∏ô‡πâ‡∏≤ ‚Äú‡∏£‡∏ß‡∏°‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‚Äù (‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞) ----------
    st.header("üìö Trader‚Äôs Wisdom ‚Äì ‡∏Ñ‡∏•‡∏±‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏ó‡∏£‡∏î‡πÄ‡∏î‡∏≠‡∏£‡πå")
    st.caption("‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î ‡∏à‡∏¥‡∏ï‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤ ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á")
    st.markdown(
        """
        <div style="padding:10px 14px; border:1px solid #333; border-radius:10px; margin:10px 0; color:#9aa0a6;">
          <b>‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:</b> ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‚Üí ‡∏ï‡πà‡∏≠‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î ‚Üí ‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏î‡πâ‡∏ß‡∏¢ Mindset ‚Üí ‡∏õ‡∏¥‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢ Risk & Money Management
        </div>
        """,
        unsafe_allow_html=True
    )
    st.markdown(
        """
        <div style="text-align:center; margin:10px 0 18px 0; opacity:.9;">
          <hr style="width: 340px; border: 1px solid #666; margin: 8px auto;"/>
          <div style="font-size:1.05rem;">‡∏≠‡πà‡∏≤‡∏ô‡∏ß‡∏±‡∏ô‡∏•‡∏∞‡∏ô‡∏¥‡∏î ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ß‡∏±‡∏ô‡∏•‡∏∞‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏Å‡πâ‡∏≤‡∏ß üß≠</div>
          <hr style="width: 340px; border: 1px solid #666; margin: 8px auto;"/>
        </div>
        """,
        unsafe_allow_html=True,
    )

    categories = [
        {
            "icon": "üí∞",
            "title": "Financial ‚Äì ‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô",
            "desc": "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á ‡∏î‡πâ‡∏ß‡∏¢‡πÅ‡∏ô‡∏ß‡∏Ñ‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏ô‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô",
            "cover": COVERS["financial"],
            "articles": financial.ARTICLES
        },
        {
            "icon": "üìà",
            "title": "‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î",
            "desc": "‡πÅ‡∏ô‡∏ß‡∏Ñ‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏µ‡πà‡∏¢‡πà‡∏≠‡∏¢‡∏á‡πà‡∏≤‡∏¢ ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á ‡πÉ‡∏ô‡∏™‡πÑ‡∏ï‡∏•‡πå Tarot Trader",
            "cover": COVERS["trading"],
            "articles": trading.ARTICLES
        },
        {
            "icon": "üß†",
            "title": "Mindset ‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏¥‡∏ï‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î",
            "desc": "‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå ‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ô‡∏±‡∏¢ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏¢‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô",
            "cover": COVERS["mindset"],
            "articles": mindset.ARTICLES
        },
        {
            "icon": "‚öñÔ∏è",
            "title": "Risk & Money Management",
            "desc": "‡πÅ‡∏Å‡πà‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏≠‡∏î‡πÉ‡∏ô‡∏ï‡∏•‡∏≤‡∏î: ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏∏‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏ö‡∏ö",
            "cover": COVERS["risk_management"],
            "articles": risk_management.ARTICLES
        },
    ]

    for i, cat in enumerate(categories):
        cat_id = f"cat{i}"
        st.subheader(f"{cat['icon']} {cat['title']}")
        col_img, col_desc = st.columns([1, 3])
        with col_img:
            _cover(cat["cover"])
        with col_desc:
            st.caption(cat["desc"])
        _render_article_buttons(cat["articles"], cat_id, cat["title"], cat["icon"])
        st.divider()

    st.markdown(
        "<div style='text-align:center; color:#9aa0a6; font-size:.9rem; margin-top:12px;'>"
        "‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß ~3‚Äì5 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô ‚Ä¢ ‡πÄ‡∏ô‡πâ‡∏ô‡∏ô‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö Tarot Trader ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</div>",
        unsafe_allow_html=True,
    )